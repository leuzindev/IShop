// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int           @id @default(autoincrement())
  name      String        @db.VarChar(255)
  email     String        @db.VarChar(255)
  password  String        @db.VarChar(75)
  role      Role          @default(USER)
  address   UserAddress[]
  createdAt DateTime      @default(now())
  updatedAt DateTime      @updatedAt
  Cart      Cart?
}

enum Role {
  USER
  ADMIN
  SUPPLIER
}

model Cart {
  id          Int           @id @default(autoincrement())
  description String        @db.VarChar(255)
  title       String        @db.VarChar(45)
  user        User          @relation(fields: [user_id], references: [id])
  user_id     Int           @unique
  product     CartProduct[]
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
}

model Product {
  id          Int               @id @default(autoincrement())
  name        String            @db.VarChar(255)
  description String            @db.VarChar(255)
  price       Decimal
  Picture     Picture?
  cart        CartProduct[]
  createdAt   DateTime          @default(now())
  updatedAt   DateTime          @updatedAt
  category    ProductCategory[]
}

model Category {
  id          Int               @id @default(autoincrement())
  name        String            @db.VarChar(255)
  description String            @db.VarChar(255)
  createdAt   DateTime          @default(now())
  updatedAt   DateTime          @updatedAt
  product     ProductCategory[]
}

model Picture {
  id         Int      @id @default(autoincrement())
  url        String   @db.VarChar(255)
  title      String   @db.VarChar(255)
  product    Product  @relation(fields: [product_id], references: [id])
  product_id Int      @unique
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model Cep {
  id          Int      @id @default(autoincrement())
  cep         String   @db.Char(9)
  public_area String   @db.VarChar(100)
  continued   String   @db.VarChar(100)
  distric     String   @db.VarChar(100)
  locality    String   @db.VarChar(100)
  uf          String   @db.Char(2)
  Address     Address?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Address {
  id        Int           @id @default(autoincrement())
  number    String        @db.VarChar(100)
  cep       Cep           @relation(fields: [cep_id], references: [id])
  cep_id    Int           @unique
  user      UserAddress[]
  createdAt DateTime      @default(now())
  updatedAt DateTime      @updatedAt
}

model UserAddress {
  user       User    @relation(fields: [user_id], references: [id])
  address    Address @relation(fields: [address_id], references: [id])
  user_id    Int
  address_id Int

  @@id([user_id, address_id])
}

model CartProduct {
  product    Product @relation(fields: [product_id], references: [id])
  cart       Cart    @relation(fields: [cart_id], references: [id])
  product_id Int
  cart_id    Int

  @@id([product_id, cart_id])
}

model ProductCategory {
  category    Category @relation(fields: [category_id], references: [id])
  product     Product  @relation(fields: [product_id], references: [id])
  product_id  Int
  category_id Int

  @@id([category_id, product_id])
}
